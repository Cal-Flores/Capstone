{"ast":null,"code":"var _jsxFileName = \"/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/CreateQuestionForm/CreatePostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createNewPost, getAllPosts } from '../../store/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm(_ref) {\n  _s();\n  let {\n    setShowModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [body, setBody] = useState('');\n  const [image, setImage] = useState(null);\n  const [type, setType] = useState('post');\n  const [imageLoading, setImageLoading] = useState(false);\n  const [error, setError] = useState([]);\n  useEffect(() => {\n    let err = [];\n    if (body.length > 2500 || body.length < 4) err.push('Body must be between 4 and 2500 characters');\n    setError(err);\n  }, [body]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newPost = {\n      body,\n      type\n    };\n    const formData = new FormData();\n    formData.append(\"image\", image);\n\n    // aws uploads can be a bit slow—displaying\n    // some sort of loading message is a good idea\n    setImageLoading(true);\n    const res = await fetch('/api/posts/images', {\n      method: \"POST\",\n      body: formData\n    });\n    if (res.ok) {\n      let data = await res.json();\n      newPost.image = data.images;\n      console.log('something amazing happened!', data.images);\n      //history.push(\"/images\");\n      let cala = await dispatch(createNewPost(newPost)).then(() => dispatch(getAllPosts()));\n      if (cala) {\n        console.log('dispatches were made bro using this', newPost);\n      }\n      setImageLoading(false);\n      setShowModal(false);\n      window.location.reload();\n      return history.push('/');\n    } else {\n      setImageLoading(false);\n      // a real app would probably use more advanced\n      // error handling\n      console.log(\"something bad happened\");\n    }\n  };\n  const updateImage = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qumodalcontainer\",\n      children: [error.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"error-map\",\n        children: error.map((err, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qmodalwrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qdiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"choosefile\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: updateImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), imageLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qdiv\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            contendable: true,\n            className: \"q2input\",\n            required: true,\n            minlength: \"4\",\n            maxlength: \"2501\",\n            type: \"text\",\n            placeholder: \"Say something...\",\n            value: body,\n            onChange: e => setBody(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cancelmodal\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"qmbtn\",\n              disabled: !!error.length,\n              type: \"submit\",\n              children: \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setShowModal(false),\n            className: \"canceltxt\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(PostForm, \"tyn94ACFp/TyLqWgyj/1Pr/ipS8=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","createNewPost","getAllPosts","PostForm","setShowModal","dispatch","history","body","setBody","image","setImage","type","setType","imageLoading","setImageLoading","error","setError","err","length","push","handleSubmit","e","preventDefault","newPost","formData","FormData","append","res","fetch","method","ok","data","json","images","console","log","cala","then","window","location","reload","updateImage","file","target","files","map","i","value"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/CreateQuestionForm/CreatePostForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { createNewPost, getAllPosts } from '../../store/posts'\n\n\n\nfunction PostForm({ setShowModal }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [body, setBody] = useState('')\n    const [image, setImage] = useState(null)\n    const [type, setType] = useState('post')\n    const [imageLoading, setImageLoading] = useState(false);\n    const [error, setError] = useState([])\n\n    useEffect(() => {\n        let err = []\n        if (body.length > 2500 || body.length < 4) err.push('Body must be between 4 and 2500 characters')\n        setError(err)\n\n    }, [body])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let newPost = {\n            body,\n            type,\n        }\n        const formData = new FormData();\n        formData.append(\"image\", image);\n\n        // aws uploads can be a bit slow—displaying\n        // some sort of loading message is a good idea\n        setImageLoading(true);\n\n        const res = await fetch('/api/posts/images', {\n            method: \"POST\",\n            body: formData,\n        });\n        if (res.ok) {\n            let data = await res.json();\n            newPost.image = data.images\n            console.log('something amazing happened!', data.images)\n            //history.push(\"/images\");\n            let cala = await dispatch(createNewPost(newPost)).then(() => dispatch(getAllPosts()))\n            if (cala) {\n                console.log('dispatches were made bro using this', newPost)\n            }\n            setImageLoading(false);\n            setShowModal(false)\n            window.location.reload()\n            return history.push('/')\n        }\n        else {\n            setImageLoading(false);\n            // a real app would probably use more advanced\n            // error handling\n            console.log(\"something bad happened\");\n        }\n\n\n    }\n\n    const updateImage = (e) => {\n        const file = e.target.files[0];\n        setImage(file);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className='qumodalcontainer'>\n                {error.length > 0 && (\n                    <ul className=\"error-map\">{error.map((err, i) => (\n                        <li key={i}>{err}</li>\n                    ))}\n                    </ul>\n                )}\n                <div className='qmodalwrapper'>\n                    <div className='qdiv'>\n                        {/* <input className='q1input' required minlength='4' type='text' placeholder='Post Image Url' value={image} onChange={(e) => setImage(e.target.value)} /> */}\n                        <input\n                            className='choosefile'\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={updateImage}\n                        />\n                        {/* <button type=\"submit\">Submit</button> */}\n                        {(imageLoading) && <p>Loading...</p>}\n                    </div>\n                    <div className='qdiv'>\n                        <textarea contendable className='q2input' required minlength='4' maxlength='2501' type='text' placeholder='Say something...' value={body} onChange={(e) => setBody(e.target.value)} />\n                    </div>\n                    <div className='cancelmodal'>\n                        <div>\n                            <button className='qmbtn' disabled={!!error.length} type='submit'>Create Post</button>\n                        </div>\n                        <div onClick={() => setShowModal(false)} className='canceltxt'>Cancel</div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default PostForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}