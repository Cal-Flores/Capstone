{"ast":null,"code":"var _jsxFileName = \"/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/Splash/splash.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { getAllPosts } from '../../store/posts';\nimport { getAllQuestions } from '../../store/questions';\nimport CreateSplashQuestionFormModal from '../CreateQuestionForm/CreateSplashQuestionModal';\nimport QuestionDetail from '../QuestionDetail/questionDetail';\nimport './splash.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllQuestions() {\n  _s();\n  const dispatch = useDispatch();\n  let questions = useSelector(state => state.questions.Questions);\n  const user = useSelector(state => state.session.user);\n  const posts = useSelector(state => state.posts.Posts);\n\n  // const data = posts\n  //console.log('this is data', data)\n  const shuffledData = questions === null || questions === void 0 ? void 0 : questions.concat(posts);\n  // const shuffledData = data?.sort((a, b) => 0.5 - Math.random());\n  function DateComparator(dateAPair, dateBPair) {\n    var DateA = new Date(dateAPair.created);\n    var DateB = new Date(dateBPair.created);\n    if (DateA < DateB) {\n      return -1;\n    } else if (DateA > DateB) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n  shuffledData === null || shuffledData === void 0 ? void 0 : shuffledData.sort(DateComparator);\n  console.log('gnt', shuffledData);\n\n  // console.log('this is all my shuffleddata right here', shuffledData)\n\n  useEffect(() => {\n    dispatch(getAllQuestions());\n    dispatch(getAllPosts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CreateSplashQuestionFormModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indvcontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indvwrap\",\n        children: shuffledData === null || shuffledData === void 0 ? void 0 : shuffledData.map(content => /*#__PURE__*/_jsxDEV(QuestionDetail, {\n          content: content\n        }, content === null || content === void 0 ? void 0 : content.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)).reverse()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(AllQuestions, \"a3L2fmMODtpvEJbFtINaZFXIuKA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = AllQuestions;\nexport default AllQuestions;\nvar _c;\n$RefreshReg$(_c, \"AllQuestions\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Redirect","useHistory","getAllPosts","getAllQuestions","CreateSplashQuestionFormModal","QuestionDetail","AllQuestions","dispatch","questions","state","Questions","user","session","posts","Posts","shuffledData","concat","DateComparator","dateAPair","dateBPair","DateA","Date","created","DateB","sort","console","log","map","content","id","reverse"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/Splash/splash.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { getAllPosts } from '../../store/posts'\nimport { getAllQuestions } from '../../store/questions'\nimport CreateSplashQuestionFormModal from '../CreateQuestionForm/CreateSplashQuestionModal'\nimport QuestionDetail from '../QuestionDetail/questionDetail'\nimport './splash.css'\n\nfunction AllQuestions() {\n    const dispatch = useDispatch()\n    let questions = useSelector(state => state.questions.Questions)\n    const user = useSelector(state => state.session.user)\n    const posts = useSelector(state => state.posts.Posts)\n\n    // const data = posts\n    //console.log('this is data', data)\n    const shuffledData = questions?.concat(posts)\n    // const shuffledData = data?.sort((a, b) => 0.5 - Math.random());\n    function DateComparator(dateAPair, dateBPair) {\n\n        var DateA = new Date(dateAPair.created);\n        var DateB = new Date(dateBPair.created);\n        if (DateA < DateB) {\n            return -1;\n        } else if (DateA > DateB) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    shuffledData?.sort(DateComparator);\n    console.log('gnt', shuffledData);\n\n\n    // console.log('this is all my shuffleddata right here', shuffledData)\n\n\n\n\n    useEffect(() => {\n        dispatch(getAllQuestions())\n        dispatch(getAllPosts())\n    }, [dispatch])\n\n    return (\n        <div>\n            {user &&\n                <div>\n                    <CreateSplashQuestionFormModal />\n                </div>\n            }\n            {!user &&\n                <div className='suggest'></div>\n            }\n            <div className='indvcontainer'>\n                <div className='indvwrap'>\n                    {shuffledData?.map(content => (\n                        <QuestionDetail key={content?.id} content={content} />\n                    )).reverse()}\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default AllQuestions\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,UAAU,QAAQ,kBAAkB;AACvD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,eAAe,QAAQ,uBAAuB;AACvD,OAAOC,6BAA6B,MAAM,iDAAiD;AAC3F,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAO,cAAc;AAAA;AAErB,SAASC,YAAY,GAAG;EAAA;EACpB,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,IAAIU,SAAS,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,SAAS,CAACE,SAAS,CAAC;EAC/D,MAAMC,IAAI,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,OAAO,CAACD,IAAI,CAAC;EACrD,MAAME,KAAK,GAAGd,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACI,KAAK,CAACC,KAAK,CAAC;;EAErD;EACA;EACA,MAAMC,YAAY,GAAGP,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEQ,MAAM,CAACH,KAAK,CAAC;EAC7C;EACA,SAASI,cAAc,CAACC,SAAS,EAAEC,SAAS,EAAE;IAE1C,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAACH,SAAS,CAACI,OAAO,CAAC;IACvC,IAAIC,KAAK,GAAG,IAAIF,IAAI,CAACF,SAAS,CAACG,OAAO,CAAC;IACvC,IAAIF,KAAK,GAAGG,KAAK,EAAE;MACf,OAAO,CAAC,CAAC;IACb,CAAC,MAAM,IAAIH,KAAK,GAAGG,KAAK,EAAE;MACtB,OAAO,CAAC;IACZ,CAAC,MAAM;MACH,OAAO,CAAC;IACZ;EACJ;EAEAR,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAES,IAAI,CAACP,cAAc,CAAC;EAClCQ,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEX,YAAY,CAAC;;EAGhC;;EAKAnB,SAAS,CAAC,MAAM;IACZW,QAAQ,CAACJ,eAAe,EAAE,CAAC;IAC3BI,QAAQ,CAACL,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEd,oBACI;IAAA,WACKI,IAAI,iBACD;MAAA,uBACI,QAAC,6BAA6B;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC/B,EAET,CAACA,IAAI,iBACF;MAAK,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAO,eAEnC;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC1B;QAAK,SAAS,EAAC,UAAU;QAAA,UACpBI,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEY,GAAG,CAACC,OAAO,iBACtB,QAAC,cAAc;UAAmB,OAAO,EAAEA;QAAQ,GAA9BA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,EAAE;UAAA;UAAA;UAAA;QAAA,QACnC,CAAC,CAACC,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA;IACV;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAGd;AAAC,GA1DQxB,YAAY;EAAA,QACAR,WAAW,EACZC,WAAW,EACdA,WAAW,EACVA,WAAW;AAAA;AAAA,KAJpBO,YAAY;AA4DrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}