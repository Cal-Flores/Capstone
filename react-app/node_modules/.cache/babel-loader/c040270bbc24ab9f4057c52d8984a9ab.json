{"ast":null,"code":"var _jsxFileName = \"/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/EditQuestionForm/editQuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getAllQuestions, getUserQuestions, updateQuestion } from '../../store/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditQuestionForm(_ref) {\n  _s();\n  let {\n    q,\n    setShowModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    questionId\n  } = useParams();\n  const questions = useSelector(state => state.questions.Questions);\n  const question = questions === null || questions === void 0 ? void 0 : questions.filter(question => (question === null || question === void 0 ? void 0 : question.id) == questionId)[0];\n  const [title, setTitle] = useState(q === null || q === void 0 ? void 0 : q.title);\n  const [body, setBody] = useState(q === null || q === void 0 ? void 0 : q.body);\n  const [image, setImage] = useState(q === null || q === void 0 ? void 0 : q.image);\n  const [error, setError] = useState([]);\n  useEffect(() => {\n    let err = [];\n    if (body.length > 750) err.push('Body must be less that 1500 characters');\n    if (body.length < 6) err.push('Body must be greater than 5 characters');\n    if (title.length > 100) err.push('Title must be less than 100 characters');\n    if (title.length < 4) err.push('Title must be greater than 4 characters');\n    setError(err);\n  }, [body, title]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newQuestion = {\n      title,\n      body,\n      image\n    };\n    dispatch(updateQuestion(newQuestion, q.id)).then(() => dispatch(getUserQuestions()));\n    setShowModal(false);\n    return history.push('/your-questions');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error.length && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"error-map\",\n      children: error.map((err, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        minlength: \"4\",\n        maxlength: \"101\",\n        type: \"text\",\n        placeholder: \"Question Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        minlength: \"5\",\n        maxlength: \"751\",\n        type: \"text\",\n        placeholder: \"Start your question with \\\"What\\\", \\\"How\\\", \\\"Why\\\", etc\",\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !!error.length,\n        type: \"submit\",\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(EditQuestionForm, \"5y13tiUBQxRPvs2n9JhDZOxl+WM=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector];\n});\n_c = EditQuestionForm;\nexport default EditQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"EditQuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","getAllQuestions","getUserQuestions","updateQuestion","EditQuestionForm","q","setShowModal","dispatch","history","questionId","questions","state","Questions","question","filter","id","title","setTitle","body","setBody","image","setImage","error","setError","err","length","push","handleSubmit","e","preventDefault","newQuestion","then","map","i","target","value"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/EditQuestionForm/editQuestionForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { getAllQuestions, getUserQuestions, updateQuestion } from '../../store/questions'\n\n\n\nfunction EditQuestionForm({ q, setShowModal }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { questionId } = useParams()\n\n    const questions = useSelector(state => state.questions.Questions)\n    const question = questions?.filter(question => question?.id == questionId)[0]\n    const [title, setTitle] = useState(q?.title)\n    const [body, setBody] = useState(q?.body)\n    const [image, setImage] = useState(q?.image)\n    const [error, setError] = useState([])\n\n    useEffect(() => {\n        let err = []\n\n        if (body.length > 750) err.push('Body must be less that 1500 characters')\n        if (body.length < 6) err.push('Body must be greater than 5 characters')\n        if (title.length > 100) err.push('Title must be less than 100 characters')\n        if (title.length < 4) err.push('Title must be greater than 4 characters')\n        setError(err)\n\n    }, [body, title])\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        let newQuestion = {\n            title,\n            body,\n            image\n        }\n\n        dispatch(updateQuestion(newQuestion, q.id)).then(() => dispatch(getUserQuestions()))\n        setShowModal(false)\n        return history.push('/your-questions')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {error.length && (\n                <ul className=\"error-map\">{error.map((err, i) => (\n                    <li key={i}>{err}</li>\n                ))}\n                </ul>\n            )}\n            <div>\n                <input required minlength='4' maxlength='101' type='text' placeholder='Question Title' value={title} onChange={(e) => setTitle(e.target.value)} />\n            </div>\n            <div>\n                <textarea required minlength='5' maxlength='751' type='text' placeholder='Start your question with \"What\", \"How\", \"Why\", etc' value={body} onChange={(e) => setBody(e.target.value)} />\n            </div>\n            <div>\n                <button disabled={!!error.length} type='submit'>Add Question</button>\n            </div>\n        </form>\n    )\n}\n\nexport default EditQuestionForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}