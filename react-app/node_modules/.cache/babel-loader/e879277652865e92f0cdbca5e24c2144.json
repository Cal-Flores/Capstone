{"ast":null,"code":"//################### Actions   ###########################\nconst LOAD_ANSWERS = 'answers/LOAD_ANSWERS';\nconst CREATE_ANSWER = 'answers/CREATE_ANSWER';\nconst LOAD_USER_ANSWERS = 'answers/LOAD_USER_ANSWERS';\nconst EDIT_ANSWER = 'answers/EDIT_ANSWER';\nconst DELETE_ANSWER = 'answers/DELETE_ANSWER';\n\n//################## Action Creators ######################\n\nconst loadAll = answers => {\n  return {\n    'type': LOAD_ANSWERS,\n    answers\n  };\n};\nconst createOne = newAnswer => {\n  return {\n    'type': CREATE_ANSWER,\n    newAnswer\n  };\n};\nconst userQuestion = answers => {\n  return {\n    'type': LOAD_USER_ANSWERS,\n    answers\n  };\n};\nconst editAnswer = newAnswer => {\n  return {\n    'type': EDIT_ANSWER,\n    newAnswer\n  };\n};\nconst deleteAnswer = answer => {\n  return {\n    'type': DELETE_ANSWER,\n    answer\n  };\n};\n\n//######################## Thunks ############################\n\nexport const getAllReviews = id => async dispatch => {\n  const response = await fetch(`/api/questions/${id}/answers`);\n  if (response.ok) {\n    const answers = await response.json();\n    dispatch(loadAll(answers));\n    return answers;\n  }\n  return;\n};\nexport const createNewAnswer = (id, newAnswer) => async dispatch => {\n  const response = await fetch(`/api/questions/${id}/answers`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newAnswer)\n  });\n  if (response.ok) {\n    const answer = await response.json();\n  }\n  return;\n};\nexport const getUserAnswers = () => async dispatch => {\n  const response = await fetch(`/api/answers/user-answers`);\n  if (response.ok) {\n    const answers = await response.json();\n    dispatch(userQuestion(answers));\n    return answers;\n  }\n  return;\n};\nexport const updateAnswer = (answer, answerId) => async dispatch => {\n  const response = await fetch(`/api/answers/${answerId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(answer)\n  });\n  if (response.ok) {\n    const newAnswer = await response.json();\n    dispatch(editAnswer(newAnswer));\n    return newAnswer;\n  }\n  return;\n};\nexport const deleteAAnswer = answerId => async dispatch => {\n  const response = await fetch(`/api/answers/${answerId}`, {\n    method: 'DELETE'\n  });\n  if (response.ok) {\n    dispatch(deleteAnswer(answerId));\n  }\n};\nlet initialState = {};\n//######################## Reducer ##########################\n\nconst answersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case LOAD_ANSWERS:\n      {\n        const newState = {\n          ...state,\n          ...action.answers\n        };\n        return newState;\n      }\n    case LOAD_USER_ANSWERS:\n      {\n        newState = {\n          ...action.answers\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default answersReducer;","map":{"version":3,"names":["LOAD_ANSWERS","CREATE_ANSWER","LOAD_USER_ANSWERS","EDIT_ANSWER","DELETE_ANSWER","loadAll","answers","createOne","newAnswer","userQuestion","editAnswer","deleteAnswer","answer","getAllReviews","id","dispatch","response","fetch","ok","json","createNewAnswer","method","headers","body","JSON","stringify","getUserAnswers","updateAnswer","answerId","deleteAAnswer","initialState","answersReducer","state","action","newState","type"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/store/answers.js"],"sourcesContent":["//################### Actions   ###########################\nconst LOAD_ANSWERS = 'answers/LOAD_ANSWERS'\nconst CREATE_ANSWER = 'answers/CREATE_ANSWER'\nconst LOAD_USER_ANSWERS = 'answers/LOAD_USER_ANSWERS'\nconst EDIT_ANSWER = 'answers/EDIT_ANSWER'\nconst DELETE_ANSWER = 'answers/DELETE_ANSWER'\n\n\n//################## Action Creators ######################\n\nconst loadAll = (answers) => {\n    return {\n        'type': LOAD_ANSWERS,\n        answers\n    }\n}\n\nconst createOne = (newAnswer) => {\n    return {\n        'type': CREATE_ANSWER,\n        newAnswer\n    }\n}\n\nconst userQuestion = (answers) => {\n    return {\n        'type': LOAD_USER_ANSWERS,\n        answers\n    }\n}\n\nconst editAnswer = (newAnswer) => {\n    return {\n        'type': EDIT_ANSWER,\n        newAnswer\n    }\n}\n\nconst deleteAnswer = (answer) => {\n    return {\n        'type': DELETE_ANSWER,\n        answer\n    }\n}\n\n//######################## Thunks ############################\n\nexport const getAllReviews = (id) => async dispatch => {\n    const response = await fetch(`/api/questions/${id}/answers`)\n\n    if (response.ok) {\n        const answers = await response.json()\n        dispatch(loadAll(answers))\n        return answers\n    }\n    return\n}\n\nexport const createNewAnswer = (id, newAnswer) => async dispatch => {\n    const response = await fetch(`/api/questions/${id}/answers`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newAnswer)\n    })\n    if (response.ok) {\n        const answer = await response.json()\n    }\n    return\n}\n\nexport const getUserAnswers = () => async dispatch => {\n    const response = await fetch(`/api/answers/user-answers`)\n\n    if (response.ok) {\n        const answers = await response.json()\n        dispatch(userQuestion(answers))\n        return answers\n    }\n    return\n}\n\nexport const updateAnswer = (answer, answerId) => async dispatch => {\n    const response = await fetch(`/api/answers/${answerId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(answer)\n    })\n\n    if (response.ok) {\n        const newAnswer = await response.json()\n        dispatch(editAnswer(newAnswer))\n        return newAnswer\n    }\n    return\n}\n\nexport const deleteAAnswer = (answerId) => async dispatch => {\n    const response = await fetch(`/api/answers/${answerId}`, {\n        method: 'DELETE'\n    })\n    if (response.ok) {\n        dispatch(deleteAnswer(answerId))\n    }\n}\n\nlet initialState = {}\n//######################## Reducer ##########################\n\nconst answersReducer = (state = initialState, action) => {\n    let newState = {}\n    switch (action.type) {\n        case LOAD_ANSWERS: {\n            const newState = { ...state, ...action.answers }\n            return newState\n        }\n        case LOAD_USER_ANSWERS: {\n            newState = { ...action.answers }\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\n\nexport default answersReducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}