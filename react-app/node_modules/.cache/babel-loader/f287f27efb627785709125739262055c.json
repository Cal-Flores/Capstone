{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getAllQuestions, getUserQuestions, updateQuestion } from '../../store/questions';\nfunction EditQuestionForm() {\n  _s();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  //console.log('lets freaking gooo', question)\n\n  const questions = useSelector(state => state.questions.Questions);\n  const q = questions === null || questions === void 0 ? void 0 : questions.filter(q => (q === null || q === void 0 ? void 0 : q.id) == question.id)[0];\n  //console.log('this my question', question)\n  // const [title, setTitle] = useState(question?.title)\n  // const [body, setBody] = useState(question?.body)\n  // const [image, setImage] = useState(question?.image)\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newQuestion = {\n      title,\n      body,\n      image\n    };\n\n    // dispatch(updateQuestion(newQuestion, question.id)).then(() => dispatch(getUserQuestions()))\n    // return history.push('/your-questions')\n  };\n\n  return null\n  // <form onSubmit={handleSubmit}>\n  //     <div>\n  //         <input required type='text' placeholder='Question Title' value={title} onChange={(e) => setTitle(e.target.value)} />\n  //     </div>\n  //     <div>\n  //         <textarea required type='text' placeholder='Start your question with \"What\", \"How\", \"Why\", etc' value={body} onChange={(e) => setBody(e.target.value)} />\n  //     </div>\n  //     <div>\n  //         <button type='submit'>Add Question</button>\n  //     </div>\n  // </form>\n  ;\n}\n_s(EditQuestionForm, \"AhemiR8IJ4haqMGpyP7P4hW+jJw=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n_c = EditQuestionForm;\nexport default EditQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"EditQuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","getAllQuestions","getUserQuestions","updateQuestion","EditQuestionForm","dispatch","history","questions","state","Questions","q","filter","id","question","handleSubmit","e","preventDefault","newQuestion","title","body","image"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/EditQuestionForm/editQuestionForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { getAllQuestions, getUserQuestions, updateQuestion } from '../../store/questions'\n\n\n\nfunction EditQuestionForm() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    //console.log('lets freaking gooo', question)\n\n    const questions = useSelector(state => state.questions.Questions)\n    const q = questions?.filter(q => q?.id == question.id)[0]\n    //console.log('this my question', question)\n    // const [title, setTitle] = useState(question?.title)\n    // const [body, setBody] = useState(question?.body)\n    // const [image, setImage] = useState(question?.image)\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        let newQuestion = {\n            title,\n            body,\n            image\n        }\n\n        // dispatch(updateQuestion(newQuestion, question.id)).then(() => dispatch(getUserQuestions()))\n        // return history.push('/your-questions')\n    }\n\n    return (\n        null\n        // <form onSubmit={handleSubmit}>\n        //     <div>\n        //         <input required type='text' placeholder='Question Title' value={title} onChange={(e) => setTitle(e.target.value)} />\n        //     </div>\n        //     <div>\n        //         <textarea required type='text' placeholder='Start your question with \"What\", \"How\", \"Why\", etc' value={body} onChange={(e) => setBody(e.target.value)} />\n        //     </div>\n        //     <div>\n        //         <button type='submit'>Add Question</button>\n        //     </div>\n        // </form>\n    )\n}\n\nexport default EditQuestionForm\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,uBAAuB;AAIzF,SAASC,gBAAgB,GAAG;EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAMS,OAAO,GAAGP,UAAU,EAAE;EAC5B;;EAEA,MAAMQ,SAAS,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,SAAS,CAACE,SAAS,CAAC;EACjE,MAAMC,CAAC,GAAGH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,MAAM,CAACD,CAAC,IAAI,CAAAA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEE,EAAE,KAAIC,QAAQ,CAACD,EAAE,CAAC,CAAC,CAAC,CAAC;EACzD;EACA;EACA;EACA;;EAGA,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIC,WAAW,GAAG;MACdC,KAAK;MACLC,IAAI;MACJC;IACJ,CAAC;;IAED;IACA;EACJ,CAAC;;EAED,OACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER;AAAC,GAxCQhB,gBAAgB;EAAA,QACJP,WAAW,EACZE,UAAU,EAGRD,WAAW;AAAA;AAAA,KALxBM,gBAAgB;AA0CzB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}