{"ast":null,"code":"//################### Actions   ###########################\nconst LOAD_QUESTIONS = 'questions/LOAD_QUESTIONS';\n\n//################## Action Creators ######################\n\n// loads all questions for splash page\nconst loadAll = questions => {\n  return {\n    'type': LOAD_QUESTIONS,\n    questions\n  };\n};\n\n//######################## Thunks ############################\n\nexport const getAllQuestions = () => async dispatch => {\n  const response = await fetch(`/api/questions/`);\n  if (response.ok) {\n    const questions = await response.json();\n    dispatch(loadAll(questions));\n    return questions;\n  }\n  return;\n};\nlet initialState = {};\n//######################## Reducer ##########################\n\nconst questionsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case LOAD_QUESTIONS:\n      {\n        newState = {\n          ...action.questions\n        };\n        return newState;\n      }\n    default:\n      return state;\n  }\n};\nexport default questionsReducer;","map":{"version":3,"names":["LOAD_QUESTIONS","loadAll","questions","getAllQuestions","dispatch","response","fetch","ok","json","initialState","questionsReducer","state","action","newState","type"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/store/questions.js"],"sourcesContent":["//################### Actions   ###########################\nconst LOAD_QUESTIONS = 'questions/LOAD_QUESTIONS'\n\n\n//################## Action Creators ######################\n\n// loads all questions for splash page\nconst loadAll = (questions) => {\n    return {\n        'type': LOAD_QUESTIONS,\n        questions\n    }\n}\n\n\n\n//######################## Thunks ############################\n\nexport const getAllQuestions = () => async dispatch => {\n    const response = await fetch(`/api/questions/`)\n\n    if (response.ok) {\n        const questions = await response.json()\n        dispatch(loadAll(questions))\n        return questions\n    }\n    return\n}\n\n\n\nlet initialState = {}\n//######################## Reducer ##########################\n\nconst questionsReducer = (state = initialState, action) => {\n    let newState = {}\n    switch (action.type) {\n        case LOAD_QUESTIONS: {\n            newState = { ...action.questions }\n            return newState\n        }\n        default:\n            return state\n    }\n}\n\n\nexport default questionsReducer\n"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG,0BAA0B;;AAGjD;;AAEA;AACA,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAC3B,OAAO;IACH,MAAM,EAAEF,cAAc;IACtBE;EACJ,CAAC;AACL,CAAC;;AAID;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAMC,QAAQ,IAAI;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgB,CAAC;EAE/C,IAAID,QAAQ,CAACE,EAAE,EAAE;IACb,MAAML,SAAS,GAAG,MAAMG,QAAQ,CAACG,IAAI,EAAE;IACvCJ,QAAQ,CAACH,OAAO,CAACC,SAAS,CAAC,CAAC;IAC5B,OAAOA,SAAS;EACpB;EACA;AACJ,CAAC;AAID,IAAIO,YAAY,GAAG,CAAC,CAAC;AACrB;;AAEA,MAAMC,gBAAgB,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAClD,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjB,QAAQD,MAAM,CAACE,IAAI;IACf,KAAKd,cAAc;MAAE;QACjBa,QAAQ,GAAG;UAAE,GAAGD,MAAM,CAACV;QAAU,CAAC;QAClC,OAAOW,QAAQ;MACnB;IACA;MACI,OAAOF,KAAK;EAAA;AAExB,CAAC;AAGD,eAAeD,gBAAgB"},"metadata":{},"sourceType":"module"}