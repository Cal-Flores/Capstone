{"ast":null,"code":"var _jsxFileName = \"/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/CreateQuestionForm/questionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createNewQuestion, getAllQuestions } from '../../store/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionForm(_ref) {\n  _s();\n  let {\n    setShowModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [image, setImage] = useState('');\n  const [error, setErrors] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let err = [];\n    if (body.length > 750) err.push('Body must be less that 1500 characters');\n    setErrors(err);\n    let newQuestion = {\n      title,\n      body,\n      image\n    };\n    console.log('shut up', err);\n    dispatch(createNewQuestion(newQuestion)).then(() => dispatch(getAllQuestions()));\n    setShowModal(false);\n    return history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"error-map\",\n      children: error.map((err, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        minlength: \"5\",\n        maxlength: \"100\",\n        type: \"text\",\n        placeholder: \"Question Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        minlength: \"5\",\n        maxlength: \"750\",\n        type: \"text\",\n        placeholder: \"Start your question with \\\"What\\\", \\\"How\\\", \\\"Why\\\", etc\",\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionForm, \"zlLYXU7pHWSbBzGY7KqSZvwsb0k=\", false, function () {\n  return [useDispatch, useHistory];\n});\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","createNewQuestion","getAllQuestions","QuestionForm","setShowModal","dispatch","history","title","setTitle","body","setBody","image","setImage","error","setErrors","handleSubmit","e","preventDefault","err","length","push","newQuestion","console","log","then","map","i","target","value"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/CreateQuestionForm/questionForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { createNewQuestion, getAllQuestions } from '../../store/questions'\n\n\nfunction QuestionForm({ setShowModal }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [image, setImage] = useState('')\n    const [error, setErrors] = useState([])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        let err = []\n\n        if (body.length > 750) err.push('Body must be less that 1500 characters')\n\n        setErrors(err)\n        let newQuestion = {\n            title,\n            body,\n            image\n        }\n        console.log('shut up', err)\n        dispatch(createNewQuestion(newQuestion)).then(() => dispatch(getAllQuestions()))\n        setShowModal(false)\n        return history.push('/')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {error.length > 0 && (\n                <ul className=\"error-map\">{error.map((err, i) => (\n                    <li key={i}>{err}</li>\n                ))}\n                </ul>\n            )}\n            <div>\n                <input required minlength='5' maxlength='100' type='text' placeholder='Question Title' value={title} onChange={(e) => setTitle(e.target.value)} />\n            </div>\n            <div>\n                <textarea required minlength='5' maxlength='750' type='text' placeholder='Start your question with \"What\", \"How\", \"Why\", etc' value={body} onChange={(e) => setBody(e.target.value)} />\n            </div>\n            <div>\n                <button type='submit'>Add Question</button>\n            </div>\n        </form>\n    )\n}\n\nexport default QuestionForm\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,uBAAuB;AAAA;AAG1E,SAASC,YAAY,OAAmB;EAAA;EAAA,IAAlB;IAAEC;EAAa,CAAC;EAClC,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,OAAO,GAAGN,UAAU,EAAE;EAC5B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAIT,IAAI,CAACU,MAAM,GAAG,GAAG,EAAED,GAAG,CAACE,IAAI,CAAC,wCAAwC,CAAC;IAEzEN,SAAS,CAACI,GAAG,CAAC;IACd,IAAIG,WAAW,GAAG;MACdd,KAAK;MACLE,IAAI;MACJE;IACJ,CAAC;IACDW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,GAAG,CAAC;IAC3Bb,QAAQ,CAACJ,iBAAiB,CAACoB,WAAW,CAAC,CAAC,CAACG,IAAI,CAAC,MAAMnB,QAAQ,CAACH,eAAe,EAAE,CAAC,CAAC;IAChFE,YAAY,CAAC,KAAK,CAAC;IACnB,OAAOE,OAAO,CAACc,IAAI,CAAC,GAAG,CAAC;EAC5B,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEL,YAAa;IAAA,WACxBF,KAAK,CAACM,MAAM,GAAG,CAAC,iBACb;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEN,KAAK,CAACY,GAAG,CAAC,CAACP,GAAG,EAAEQ,CAAC,kBACxC;QAAA,UAAaR;MAAG,GAAPQ,CAAC;QAAA;QAAA;QAAA;MAAA,QACb;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL,eACD;MAAA,uBACI;QAAO,QAAQ;QAAC,SAAS,EAAC,GAAG;QAAC,SAAS,EAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,gBAAgB;QAAC,KAAK,EAAEnB,KAAM;QAAC,QAAQ,EAAGS,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACW,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChJ,eACN;MAAA,uBACI;QAAU,QAAQ;QAAC,SAAS,EAAC,GAAG;QAAC,SAAS,EAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,0DAAoD;QAAC,KAAK,EAAEnB,IAAK;QAAC,QAAQ,EAAGO,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACW,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACrL,eACN;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAsB;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GA7CQzB,YAAY;EAAA,QACAL,WAAW,EACZE,UAAU;AAAA;AAAA,KAFrBG,YAAY;AA+CrB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}