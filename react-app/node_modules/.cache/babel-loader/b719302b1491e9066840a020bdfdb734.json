{"ast":null,"code":"var _jsxFileName = \"/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/EditQuestionForm/editQuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getAllQuestions, getUserQuestions, updateQuestion } from '../../store/questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditQuestionForm(_ref) {\n  _s();\n  let {\n    q,\n    setShowModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    questionId\n  } = useParams();\n  const questions = useSelector(state => state.questions.Questions);\n  const question = questions === null || questions === void 0 ? void 0 : questions.filter(question => (question === null || question === void 0 ? void 0 : question.id) == questionId)[0];\n  const [title, setTitle] = useState(q === null || q === void 0 ? void 0 : q.title);\n  const [body, setBody] = useState(q === null || q === void 0 ? void 0 : q.body);\n  const [image, setImage] = useState(q === null || q === void 0 ? void 0 : q.image);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newQuestion = {\n      title,\n      body,\n      image\n    };\n    dispatch(updateQuestion(newQuestion, q.id)).then(() => dispatch(getUserQuestions()));\n    setShowModal(false);\n    return history.push('/your-questions');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        minlength: \"5\",\n        maxlength: \"100\",\n        type: \"text\",\n        placeholder: \"Question Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        type: \"text\",\n        placeholder: \"Start your question with \\\"What\\\", \\\"How\\\", \\\"Why\\\", etc\",\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(EditQuestionForm, \"+xkTVDN1ij3NnttDpriqcjA2LcA=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector];\n});\n_c = EditQuestionForm;\nexport default EditQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"EditQuestionForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","getAllQuestions","getUserQuestions","updateQuestion","EditQuestionForm","q","setShowModal","dispatch","history","questionId","questions","state","Questions","question","filter","id","title","setTitle","body","setBody","image","setImage","handleSubmit","e","preventDefault","newQuestion","then","push","target","value"],"sources":["/Users/calebflores/Desktop/capstone/FourtQuorra/react-app/src/components/EditQuestionForm/editQuestionForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { getAllQuestions, getUserQuestions, updateQuestion } from '../../store/questions'\n\n\n\nfunction EditQuestionForm({ q, setShowModal }) {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { questionId } = useParams()\n\n    const questions = useSelector(state => state.questions.Questions)\n    const question = questions?.filter(question => question?.id == questionId)[0]\n    const [title, setTitle] = useState(q?.title)\n    const [body, setBody] = useState(q?.body)\n    const [image, setImage] = useState(q?.image)\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        let newQuestion = {\n            title,\n            body,\n            image\n        }\n\n        dispatch(updateQuestion(newQuestion, q.id)).then(() => dispatch(getUserQuestions()))\n        setShowModal(false)\n        return history.push('/your-questions')\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <input required minlength='5' maxlength='100' type='text' placeholder='Question Title' value={title} onChange={(e) => setTitle(e.target.value)} />\n            </div>\n            <div>\n                <textarea required type='text' placeholder='Start your question with \"What\", \"How\", \"Why\", etc' value={body} onChange={(e) => setBody(e.target.value)} />\n            </div>\n            <div>\n                <button type='submit'>Add Question</button>\n            </div>\n        </form>\n    )\n}\n\nexport default EditQuestionForm\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,SAAS,QAAQ,kBAAkB;AACxD,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,uBAAuB;AAAA;AAIzF,SAASC,gBAAgB,OAAsB;EAAA;EAAA,IAArB;IAAEC,CAAC;IAAEC;EAAa,CAAC;EACzC,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,OAAO,GAAGT,UAAU,EAAE;EAC5B,MAAM;IAAEU;EAAW,CAAC,GAAGT,SAAS,EAAE;EAElC,MAAMU,SAAS,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,SAAS,CAACE,SAAS,CAAC;EACjE,MAAMC,QAAQ,GAAGH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,MAAM,CAACD,QAAQ,IAAI,CAAAA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,EAAE,KAAIN,UAAU,CAAC,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAACS,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEW,KAAK,CAAC;EAC5C,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAACS,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEa,IAAI,CAAC;EACzC,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAACS,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEe,KAAK,CAAC;EAG5C,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAIC,WAAW,GAAG;MACdT,KAAK;MACLE,IAAI;MACJE;IACJ,CAAC;IAEDb,QAAQ,CAACJ,cAAc,CAACsB,WAAW,EAAEpB,CAAC,CAACU,EAAE,CAAC,CAAC,CAACW,IAAI,CAAC,MAAMnB,QAAQ,CAACL,gBAAgB,EAAE,CAAC,CAAC;IACpFI,YAAY,CAAC,KAAK,CAAC;IACnB,OAAOE,OAAO,CAACmB,IAAI,CAAC,iBAAiB,CAAC;EAC1C,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEL,YAAa;IAAA,wBACzB;MAAA,uBACI;QAAO,QAAQ;QAAC,SAAS,EAAC,GAAG;QAAC,SAAS,EAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,gBAAgB;QAAC,KAAK,EAAEN,KAAM;QAAC,QAAQ,EAAGO,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACK,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChJ,eACN;MAAA,uBACI;QAAU,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,0DAAoD;QAAC,KAAK,EAAEX,IAAK;QAAC,QAAQ,EAAGK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACK,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACvJ,eACN;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAsB;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GAvCQzB,gBAAgB;EAAA,QACJP,WAAW,EACZE,UAAU,EACHC,SAAS,EAEdF,WAAW;AAAA;AAAA,KALxBM,gBAAgB;AAyCzB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}